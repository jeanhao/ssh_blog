<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/aop 
	 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	 http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.directwebremoting.org/schema/spring-dwr 
	http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:annotation-config />
	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.zeng" />


	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://localhost:3306/sshmodel">
		</property>
		<property name="username" value="zenghao"></property>
		<property name="password" value="zhfd6112071"></property>
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="30" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/zeng/entity/User_info.hbm.xml</value>
				<value>com/zeng/entity/Log_info.hbm.xml</value>
				<value>com/zeng/entity/User_role.hbm.xml</value>
				<value>com/zeng/entity/Article.hbm.xml</value>
				<value>com/zeng/entity/Critique.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置一个事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRES_NEW" />
			<tx:method name="update*" propagation="REQUIRES_NEW" />
			<tx:method name="del*" propagation="REQUIRES_NEW" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切入点，以及把事务切入点和事务属性关联起来 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.zeng.manager.UserManagerImpl.*(..))"
			id="UserManagerPointcut" />
		<aop:pointcut expression="execution(* com.zeng.aop.AopIntercept.*(..))"
			id="AopPointcut" />
		<aop:pointcut expression="execution(* com.zeng.manager.ArticleManagerImpl.*(..))"
			id="ArticleManagerPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="UserManagerPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ArticleManagerPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="AopPointcut" />
	</aop:config>

	<!-- 启用事务注解 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

	<bean name="userManager" class="com.zeng.manager.UserManagerImpl">
		<dwr:remote javascript="UserManager">
			<dwr:include method="addUser" />
		</dwr:remote>
	</bean>
	<dwr:configuration>
		<dwr:convert type="bean" class="com.zeng.entity.User_info">
		</dwr:convert>
	</dwr:configuration>
<!-- 	<bean name="ChatManager" class="com.zeng.contact.ChatManager">
		<dwr:remote javascript="ChatManager">
			<dwr:include method="updateUsersList" />
			<dwr:include method="send" />
		</dwr:remote>
	</bean>
	<dwr:configuration>
		<dwr:convert type="bean" class="com.zeng.contact.User" />
	</dwr:configuration> -->

</beans>